@using INSN.Web.ViewModels.Home
@using INSN.Web.Portal.Resources.Home
@using INSN.Web.Portal.Resources

@model DocumentoLegalViewModel

@{
    Layout = "~/Views/Home/DirectorioInstitucional/_LayoutDirectorioInstitucional.cshtml";
}

<main id="main">
    <section id="about" class="about">
        <div class="container" data-aos="fade-up">
            <form>
            <div class="section-header">
                <div>
                    @Html.HiddenFor(m => m.TituloPagina, new { @id = "tituloPaginaInput" })
                </div>
                <h4 id="tituloPaginaMostrado"></h4>
            </div>
        
                <div class="row">
                    <div class="col-5">
                        <div class="form-floating mb-4">
                            @Html.TextBoxFor(m => m.Documento, new { @class = "form-control", @id = "example-text-input-floating", @placeholder = "Resolución" })
                            <label class="form-label" for="example-text-input-floating">Resolución</label>
                        </div>
                    </div>
                    <div class="col-7">
                        <div class="form-floating mb-4">
                            @Html.TextBoxFor(m => m.Descripcion, new { @class = "form-control", @id = "example-text-input-floating", @placeholder = "Descripción" })
                            <label class="form-label" for="example-text-input-floating">Descripción</label>
                        </div>
                    </div>     
                    <div>
                        @Html.HiddenFor(m => m.TipoDocumentoSeleccionada, new { @id = "tipoDocumentoSeleccionado" })
                    </div>
                </div>

                <div class="row mt-3 justify-content-end">
                    <div class="col-auto">
                        <button id="btnBuscar" class="btn btn-outline-primary" type="submit"><i class="bi bi-search me-1"></i>Buscar</button>
                    </div>
                    <div class="col-auto">
                        <button class="btn btn-outline-primary" type="reset"><i class="bi bi-eraser-fill me-1"></i>Limpiar</button>
                    </div>
                </div>
                <!-- ======= INICIO : Mostrar DataTable - Datos ========================== -->
                <div class="col-12">
                    @if (Model.DocumentoLegales is null)
                    {
                        <p>Sin resultados</p>
                    }
                    else if (!Model.DocumentoLegales.Any())
                    {
                        <p>Sin datos para mostrar</p>
                    }
                    else
                    {
                        @*   Clase: Carga de Tabla- Grid Datos - Visual *@
                        <div id="GridResultado">
                            @*   Clase: Responsive para Columnas / Barra Desplazamiento *@
                            <div class="table-responsive" style="width: 100%;">
                                <table class="js-table-checkable table table-hover table-vcenter">
                                    <thead>
                                        <tr>
                                            <th class="text-center"> @Html.Raw(DocumentoLegalResource.EtiquetaGridDescripción)</th>
                                            <th class="text-center"> @Html.Raw(DocumentoLegalResource.EtiquetaGridArchivoPDF)</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.DocumentoLegales)
                                        {
                                            <tr>
                                                <td class="col-10">
                                                    <p class="fw-semibold mb-1">@item.Documento</p>
                                                    <p class="fs-sm text-muted mb-0" style="TEXT-ALIGN: JUSTIFY;">@item.Descripcion</p>
                                                    <p class="fs-sm text-muted mb-0">
                                                        @item.FechaPublicacion.ToString("yyyy-MM-dd")
                                                    </p>
                                                </td>
                                                <td class="col-2 d-none d-sm-table-cell" style="TEXT-ALIGN: CENTER;">
                                                    <a target="_blank" href="@Url.Action("Download1", "POA", new { fileName = item.PDF })">
                                                        <img src="~/imagenes/iconos/pdf.svg" alt="Icono PDF" width="32" height="32">
                                                    </a>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    }
                </div>
                <!-- ======= FIN    : Mostrar DataTable - Datos ========================== -->
             
            </form>
        </div>
    </section>
</main>



@section Scripts
    {
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var tituloPaginaInput = document.getElementById("tituloPaginaInput");
        var tituloPaginaMostrado = document.getElementById("tituloPaginaMostrado");

        if (tituloPaginaInput && tituloPaginaMostrado) {
            // Mostrar el valor inicialmente al cargar la página
            tituloPaginaMostrado.innerText = tituloPaginaInput.value;

            // Actualizar el valor cuando cambie el valor del campo oculto
            tituloPaginaInput.addEventListener("input", function () {
                tituloPaginaMostrado.innerText = tituloPaginaInput.value;
            });
        }
    });
</script>

}